import { quizData } from './form.js';
import { goToSlide } from './slider.js';
const submitButton = document.querySelector('[data-js="submit"]');
const errorEl = document.querySelector('[data-error]');
const successEl = document.querySelector('[data-success]');

const sendToEmail = async (data, successMessage) => {
  const { subject, phone, know, city, beautyServices, agree } = data;
  const formData = new FormData();

  formData.append('message', 'üéâ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∫—É–ø–æ–Ω–∞ –Ω–∞ 1.000‚ÇΩ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∏–∂–µ.');
  formData.append('from_name', 'Millenium Quiz');
  formData.append('access_key', '758094c6-3d5d-4ac5-8623-7c8a7fc3ba48'); // –ö–õ–ò–ï–ù–¢–°–ö–ò–ô - bceea8ab-b617-4135-b01f-ea1e57a340c5 MO–ô 758094c6-3d5d-4ac5-8623-7c8a7fc3ba48
  formData.append('subject', subject);
  formData.append('–¢–µ–ª–µ—Ñ–æ–Ω', phone);
  formData.append('–í—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ –≤ –≥.–î–æ–ª–≥–æ–ø—Ä—É–¥–Ω—ã–π?', city);
  formData.append('–ó–Ω–∞–∫–æ–º—ã –ª–∏ —Å —Ü–µ–Ω—Ç—Ä–æ–º –∫—Ä–∞—Å–æ—Ç—ã –∏ –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏–∏ Millenium?', know);
  formData.append('–ö–∞–∫–∏–µ —É—Å–ª—É–≥–∏ –∫—Ä–∞—Å–æ—Ç—ã –æ–±—ã—á–Ω–æ –æ–∫–∞–∑—ã–≤–∞–µ—Ç–µ –≤ —Å–∞–ª–æ–Ω–∞—Ö –∫—Ä–∞—Å–æ—Ç—ã?', beautyServices.map(s => s.replace(/^__text__/, '')).join(' | '));
  formData.append('–°–æ–≥–ª–∞—Å–Ω—ã –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö?', agree ? '–î–∞' : '–ù–µ—Ç');

  try {
    const res = await fetch('https://api.web3forms.com/submit', {
      method: 'POST',
      body: formData,
    });

    const result = await res.json();

    if (result.success) {
      successEl.innerText = successMessage;
      goToSlide('success');
    } else {
      errorEl.innerText = '–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ E-mail —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...';
      goToSlide('error');
    }
  } catch {
    errorEl.innerText = '–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ E-mail —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...';
    goToSlide('error');
  }
};

const handleSubmit = async e => {
  const submitButton = e.currentTarget;

  try {
    submitButton.classList.add('loading');
    const { phone } = quizData;

    const response = await fetch('https://millenium-quiz-backend.vercel.app/api/save-phone', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ phone }),
    });

    const result = await response.json();

    if (result.success) {
      sendToEmail(quizData, result.message);
    } else {
      errorEl.innerText = result.message;
      goToSlide('error');
    }
  } catch (error) {
    errorEl.innerText = '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–µ–¥–µ–Ω–∏—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º :(';
    goToSlide('error');
  } finally {
    submitButton.classList.remove('loading');
  }
};

submitButton.addEventListener('click', handleSubmit);
